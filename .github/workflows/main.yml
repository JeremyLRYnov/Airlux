name: Flutter-CI
run-name: Flutter-CI
on:
  push:
    branches:
      - lacazej/workflow
      - develop
      - main
      - zetsuy/git-workflow
  pull_request:
    branches:
      - lacazej/workflow
      - develop
      - main
      - zetsuy/git-workflow
jobs:
  lint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./mobileapp/
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up Flutter
        uses: subosito/flutter-action@v1
        with:
          channel: 'stable'
      - name: Add Flutter to PATH
        run: echo "$HOME/flutter/bin" >> $GITHUB_PATH
      - name: Install dependencies
        run: flutter pub get
      - name: Run linter
        run: flutter analyze

  API-Locale:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./docker/local_api/

    steps:
      - uses: actions/checkout@v3

      - name: Set up Node
        uses: actions/setup-node@v3
        with:
          node-version: '19'
          cache: 'npm'
          cache-dependency-path: './docker/local_api/package-lock.json'

      - name: Get dependencies
        run: npm install

      - name: Run ESLint
        run: npm run lint:fix

      - name: Start Docker Compose for unit tests & RUN
        run: |
          ls -l
          docker-compose up -d
          sleep 5
          docker ps
      
      - name: Run unit tests
        run: npm run test:unit
  


  deployment:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./docker/local_api/

    steps:
      - name : Checkout the repo
        uses: actions/checkout@v3
        
      - name: Create SSH key file
        run: echo "la machine virtuelle n'est plus disponible"
      #   run: echo "${{ secrets.KEY }}" > ssh_key && chmod 400 ssh_key

      # - name: copy docker-compose
      #   run: scp -i ssh_key docker-compose.yml ${{ secrets.USER }}@${{ secrets.HOST }}:~/

      # - name: Deploiement SSH
      #   uses: appleboy/ssh-action@master
      #   with:
      #     host: ${{ secrets.HOST }}
      #     key: ./ssh_key
      #     script: docker-compose up -d 

